services:
  db:
    image: postgres:17.4
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: taskapp
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: >
      sh -c "PYTHONPATH=/app ALEMBIC_DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/taskapp alembic upgrade head &&
             uvicorn main:app --host 0.0.0.0 --port 8000 --reload --reload-dir app/"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=taskapp
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/taskapp
      - ALEMBIC_DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/taskapp
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  frontend:
    platform: linux/amd64
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:5173
    depends_on:
      - api

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    command: redis-server --appendonly yes --loglevel notice --slowlog-log-slower-than 0 --slowlog-max-len 1000
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
